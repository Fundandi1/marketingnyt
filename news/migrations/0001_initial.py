# Generated by Django 4.2.24 on 2025-09-24 19:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0027_image_description'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('summary', models.TextField(help_text='Brief summary for meta description and previews', max_length=300)),
                ('body', wagtail.fields.StreamField([('rich_text', 0), ('heading', 3), ('quote', 6), ('image', 10), ('callout', 13), ('faq_list', 17)], block_lookup={0: ('news.blocks.RichTextBlock', (), {}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3')]}), 2: ('wagtail.blocks.CharBlock', (), {'max_length': 200}), 3: ('wagtail.blocks.StructBlock', [[('level', 1), ('text', 2)]], {}), 4: ('wagtail.blocks.TextBlock', (), {}), 5: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('quote', 4), ('attribution', 5)]], {}), 7: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 8: ('wagtail.blocks.CharBlock', (), {'max_length': 200, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternative text for screen readers', 'max_length': 200, 'required': False}), 10: ('wagtail.blocks.StructBlock', [[('image', 7), ('caption', 8), ('alt_text', 9)]], {}), 11: ('wagtail.blocks.RichTextBlock', (), {}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('info', 'Info'), ('warning', 'Warning'), ('success', 'Success'), ('error', 'Error')]}), 13: ('wagtail.blocks.StructBlock', [[('title', 5), ('text', 11), ('style', 12)]], {}), 14: ('wagtail.blocks.CharBlock', (), {'default': 'Ofte stillede spørgsmål', 'max_length': 100}), 15: ('wagtail.blocks.StructBlock', [[('question', 2), ('answer', 11)]], {}), 16: ('wagtail.blocks.ListBlock', (15,), {}), 17: ('wagtail.blocks.StructBlock', [[('title', 14), ('faqs', 16)]], {})})),
                ('author', models.CharField(max_length=100)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-published_at'],
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='MarketingNyt.dk', max_length=100)),
                ('default_meta_title', models.CharField(blank=True, max_length=60)),
                ('default_meta_description', models.TextField(blank=True, max_length=160)),
                ('social_twitter', models.CharField(blank=True, max_length=100)),
                ('social_facebook', models.CharField(blank=True, max_length=100)),
                ('social_linkedin', models.CharField(blank=True, max_length=100)),
                ('default_og_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='RelatedArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_articles', to='news.articlepage')),
                ('related_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='news.articlepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(blank=True, max_length=200)),
                ('hero_subtitle', models.TextField(blank=True)),
                ('hero_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='news.category')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ArticlePageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='news.articlepage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='articlepage',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='news.category'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='cover_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='news.ArticlePageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
